{"version":3,"file":"static/js/720.a68104ed.chunk.js","mappings":"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","sources":["Api/fetchAPI.js","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nwindow.axios = axios;\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst KEY = '663bd5fd8d905b7ce2d57e9867d3492e';\n\nexport class ThemoviedbAPI {\n  #API_KEY = KEY;\n\n  constructor() {\n    this.BASE_URL = 'https://image.tmdb.org/t/p/w500';\n    this.defaultImg =\n      'https://m.media-amazon.com/images/M/MV5BMTRkZGE0YWYtMDFhOS00N2I4LTljMTMtYjk0MTI2YmVhOTU4XkEyXkFqcGdeQXVyNjgxNzM0NDI@._V1_.jpg';\n  }\n\n  async getPopularMovies(page) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      page: page,\n    });\n\n    const { data } = await axios.get('trending/movie/day', { params });\n    return data;\n  }\n\n  async getMovieByQuery(query, page) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      query: query,\n      page: page,\n      language: 'en-US',\n      include_adult: false,\n    });\n\n    const { data } = await axios.get('/search/movie', { params });\n    return data;\n  }\n\n  async getMovieById(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n      include_adult: false,\n    });\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${id}?${params}`\n    ).then(response => {\n      if (!response.ok) {\n        throw new Error('Oops, there is no movie with that name');\n      }\n      return response.json();\n    });\n  }\n\n  async getMovieCast(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n    });\n    const { data } = await axios.get(`movie/${id}/credits?${params}`);\n    return data.cast;\n  }\n\n  async getMovieReview(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n    });\n    const { data } = await axios.get(`movie/${id}/reviews?${params}`);\n    return data.results;\n  }\n}\n\nexport const fetchMovie = new ThemoviedbAPI();\n","import styled from 'styled-components';\n\nexport const BtnElement = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  padding: 12px 16px;\n  font-size: 16px;\n  font-weight: 500;\n  box-shadow: 0px 12px 8px 4px #cab1b14d;\n  margin: 0 0 20px 0;\n\n\n  border: ${props =>\n    props.status === 'search'\n      ? 'none'\n      : props.status === 'load'\n      ? '1px solid rgba(0, 128, 75, 0.7)'\n      : 'grey'};\n\n  background-color: ${props =>\n    props.status === 'search'\n      ? 'rgba(0, 128, 75, 0.7)'\n      : props.status === 'load'\n      ? 'transparent'\n      : 'grey'};\n\n  color: ${props =>\n    props.status === 'search'\n      ? 'hsla(0, 0%, 100%, 1)'\n      : props.status === 'load'\n      ? 'black'\n      : 'grey'};\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: rgba(0, 128, 75, 0.7);\n  }\n\n  & > svg {\n    margin-right: 8px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { BtnElement } from './Button.styled';\nimport { Spinner } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Btn = ({\n  text,\n  status,\n  icon: Icon = null,\n  disabled = false,\n  type = 'button',\n  onClick = null,\n  onLoaderPlay,\n}) => {\n  return (\n    <BtnElement\n      status={status}\n      type={type}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {Icon && <Icon></Icon>}\n      {onLoaderPlay && (\n        <Spinner\n          as=\"span\"\n          variant=\"light\"\n          size=\"sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n          animation=\"border\"\n        />\n      )}\n      {text}\n    </BtnElement>\n  );\n};\n\nBtn.propTypes = {\n  text: PropTypes.string.isRequired,\n  icon: PropTypes.any,\n  disabled: PropTypes.bool,\n  type: PropTypes.string,\n  status: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport { Btn };\n","import styled from 'styled-components';\n\nexport const MovieListContainer = styled.ul`\nmargin-top: 30px;\ndisplay: grid;\ngrid-template-columns: repeat(6, 1fr);\ngrid-template-rows: repeat(4, 1fr);\ngrid-column-gap: 15px;\ngrid-row-gap: 15px;\ncolor: var(--global-black-color);\n`;\n\nexport const MovieListItem = styled.li`\nposition: relative;\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n\n  img {\n    border-radius: 12px;\n    height: 100%;\n    width: 100%;\n  }\n  span {\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: rgba(228, 222, 30, 0.8);\n    padding: 6px 10px;\n    border-radius: 12px;\n    margin: 5px 5px 0 0;\n  }\n`;\n\nexport const MovieName = styled.p`\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 12px;\n  font-size: 14px;\n  font-weight: 500;\n  padding: 12px 12px 0 12px;\n  height: 100%;\n  margin: 0;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { fetchMovie } from '../../Api/fetchAPI';\nimport { MovieListContainer, MovieListItem, MovieName } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MovieListContainer>\n      {movies.map(movie => {\n        return (\n          <MovieListItem key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <img\n                src={\n                  movie.poster_path\n                    ? `${fetchMovie.BASE_URL}${movie.poster_path}`\n                    : fetchMovie.defaultImg\n                }\n                alt={movie.title}\n              />\n              <span>{movie.vote_average.toFixed(2)}</span>\n            </Link>\n            <MovieName>\n              {movie.title}\n            </MovieName>\n          </MovieListItem>\n        );\n      })}\n    </MovieListContainer>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  position: relative;\n  margin-bottom: 30px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 16px;\n  margin-right: 36px;\n  border-radius: 12px;\n  width: 30vw;\n  border: 1px solid rgba(0, 128, 75, 0.7);\n  box-shadow: 0px 12px 8px 4px #cab1b14d;\n\n  &:focus,\n  &:hover {\n    box-shadow: 0px 12px 8px 4px #0b78474d;\n  }\n`;\n","import { BsSearch } from 'react-icons/bs';\nimport { Form, Input } from './SearchForm.styled';\nimport PropTypes from 'prop-types';\nimport { Btn } from '../Button/Button';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { query } = e.target.elements;\n    onSubmit(query.value);\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <label>\n          <Input type=\"text\" name=\"query\" />\n        </label>\n        <Btn type=\"submit\" icon={BsSearch} text=\"Search\" status=\"search\" />\n      </Form>\n    </div>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MovieMain = styled.main`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: wrap;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { fetchMovie } from '../../Api/fetchAPI';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport { Btn } from '../../components/Button/Button';\nimport { MovieMain } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n\n  const [page, setPage] = useState(1);\n  const [total_results, setTotalResults] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n\n  const formSubmit = inputQuery => {\n    setPage(1);\n    setMovies([]);\n    setSearchParams(inputQuery !== '' ? { query: inputQuery } : {});\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    fetchMovie.getMovieByQuery(query, page).then(r => {\n      setMovies(prevMovie => [...prevMovie, ...r.results]);\n      setTotalResults(r.total_results);\n    });\n  }, [query, page]);\n\n  if (!movies) {\n    return;\n  }\n\n  const loadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <MovieMain>\n      <SearchForm onSubmit={formSubmit} />\n      {query && <MovieList movies={movies} />}\n      {total_results / 20 >= page && (\n        <Btn text=\"Load more\" status=\"load\" onClick={loadMore} />\n      )}\n    </MovieMain>\n  );\n};\n\nexport default Movies;\n"],"names":["window","axios","ThemoviedbAPI","this","BASE_URL","defaultImg","page","params","URLSearchParams","api_key","data","query","language","include_adult","id","fetch","then","response","ok","Error","json","cast","results","fetchMovie","BtnElement","styled","props","status","Btn","text","icon","Icon","disabled","type","onClick","onLoaderPlay","Spinner","as","variant","size","role","animation","MovieListContainer","MovieListItem","MovieName","MovieList","movies","location","useLocation","map","movie","to","state","from","src","poster_path","alt","title","vote_average","toFixed","Form","Input","SearchForm","onSubmit","e","preventDefault","target","elements","value","reset","name","BsSearch","MovieMain","useState","setMovies","setPage","total_results","setTotalResults","useSearchParams","searchParams","setSearchParams","get","useEffect","r","prevMovie","inputQuery","prevPage"],"sourceRoot":""}